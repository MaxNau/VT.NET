name: .NET

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags, e.g., v1.0.0
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Extract Version
      id: extract_version
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV
        else
          echo "No valid version found."
          echo "version=" >> $GITHUB_ENV
        fi

    - name: Validate Version
      id: validate_version
      run: |
        if [[ "${{ env.version }}" != "" ]]; then
          if [[ ! "${{ env.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version format is invalid. Should be in the format x.y.z"
            exit 1
          fi
        else
          echo "No valid version found. Skipping pack and publish."
          exit 0
        fi

    - name: Pack the NuGet package
      id: pack
      if: env.version != '' && startsWith(env.version, 'v') == false  # Check if version is valid
      run: |
        dotnet pack --configuration Release --output ./nupkg /p:Version=${{ env.version }}

    - name: Publish to GitHub Packages
      if: steps.pack.outcome == 'success'  # Only run this step if packing succeeded
      run: dotnet nuget push ./nupkg/*.nupkg --source "github" --api-key ${{ secrets.MY_GITHUB_TOKEN }}
    - name: Publish to GitHub Packages
      if: steps.pack.outcome == 'success'  # Only run this step if the packing succeeded
      run: dotnet nuget push ./nupkg/*.nupkg --source "github" --api-key ${{ secrets.MY_GITHUB_TOKEN }}
